//referenced from pik aftershock work in BoB

#include "MapDisplay/Installer.event" //for asm stuff that isn't decomped

#include "Break.lyn.event"

PUSH
ORG 0x2C844
jumpToHack(New_BattleInitTargetCanCounter) //writes over current "can unit counter" function
POP
PROTECT 0x2C844

#define BreakTargetEntry(breakerWType, brokenWType) "BYTE breakerWType brokenWType"
#define BreakTargetTerminator "BYTE 0xFF 0xFF"


ALIGN 4 
BreakTargetTable: //makes a separate table that determines WTA for breaking so that it is independent of vanilla WTA
BreakTargetEntry(Sword, Axe)
BreakTargetEntry(Axe, Lance)
BreakTargetEntry(Lance, Sword)
BreakTargetEntry(Bow, Knife)
BreakTargetEntry(Tome, Bow)
BreakTargetEntry(Knife, Tome)
BreakTargetTerminator

ALIGN 4 
BreakExemptCharacterList:
//BYTE Lyon
BYTE 0

ALIGN 4
BreakExemptClassList:
BYTE Warden
BYTE Vanguard
BYTE 0

//skillsys stuff; comment out if you have it elsewhere

ALIGN 4
gDebuffTable:
WORD DebuffTableRam
ALIGN 4

DazzleIDLink:
BYTE DazzleID
ALIGN 4

#define Instrument(Type, RefNote, ForcedPan, SoundData, Atk, Dec, Sus, Rel) "BYTE Type RefNote 0 ForcedPan; WORD SoundData; BYTE Atk Dec Sus Rel"

PUSH //adds the hit and kill direct sounds to instrument set with fimbulvetr sound
ORG 0x212A8C
Instrument(0, $3C, 0, 0x08330AFC, 255, 0, 255, 0)
ORG 0x212AB0
Instrument(0, $3C, 0, 0x083328AC, 255, 0, 255, 0)
POP

#define SFXGroup 6
#define BreakSFX_Kill 0x26E
#define BreakSFX_Hit 0x26F


//used for break
#include "MusicEvents/Song_HitBreak.event"
SongTable(BreakSFX_Hit,HitBreakSFX,SFXGroup)
#include "MusicEvents/Song_KillBreak.event"
SongTable(BreakSFX_Kill,KillBreakSFX,SFXGroup)